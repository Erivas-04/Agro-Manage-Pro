services:
  frontend:
    image: node:20
    working_dir: /app
    volumes:
      - ./Agromanagepro-angular:/app
      - node-modules:/app/node-modules
    ports:
      - "4200:4200"
    command: >
      sh -c "chmod -R 777 /app/node-modules &&
             npm install &&
             npm start"
    container_name: agro-frontend
    depends_on:
      - backend
    networks:
      - agromanagepro-net

  db:
    image: mariadb:10.4
    command: ['mysqld', '--character-set-server=latin1', '--collation-server=latin1_swedish_ci']
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_CHARSET=latin1
      - MYSQL_COLLATION=latin1_swedish_ci
    container_name: agro-db
    volumes:
      - agromanagepro-data:/var/lib/mysql
    networks:
      - agromanagepro-net

  backend:
    image: python:3.10
    working_dir: /app
    env_file:
      - .env
    environment:
      - DJANGO_READ_DOT_ENV_FILE=True
    command: >
      sh -c "pip install -r requirements.txt --no-cache-dir &&
            ./wait-for-it.sh db:3306 &&
            chmod -R 777 /app/apps &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    container_name: agro-backend
    depends_on:
      - db
    volumes:
      - .:/app
    networks:
      - agromanagepro-net

networks:
  agromanagepro-net:
volumes:
  agromanagepro-data:
  node-modules:
